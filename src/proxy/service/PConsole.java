package proxy.service;

import java.util.Arrays;
import java.util.HashMap;
import java.util.Scanner;
import java.util.stream.Stream;

/**
 * Console application to interface with the proxy instance manager
 *
 * @author tjenkins
 */
public class PConsole {

    static Proxy server;
    static Options options;
    public static HashMap<String, String> parameters;

    //TODO (pending):
    //setup param changes to reflect on any given valid port specified
    /**
     * @param args usage: java proxy.PConsole [param1] [value1] ... [paramN]
     * [valueN] program
     */
    public static void main(String[] args) {

        // do some pre-processing to make sure the value pairs are sane
        Stream<String> argStream = Arrays.stream(args).filter((x) -> {
            return x.startsWith("--");
        });
        if (((argStream.count() * 2) != args.length) || (args.length % 2 != 0)) {
            System.err.println("Mismatched arg to value in parameter list");
            System.out.println("--usage: java proxy.PConsole <param1> <value1> ... <paramN> <valueN>");
            System.exit(1);
        }

        options = new Options(args, "--");

        // TODO: process options when they are implemented
        //start up instance manager (proxy class)
        server = new Proxy();
        consoleLoop();

    }

    /**
     * Simple little interface for the proxy server
     */
    public static void consoleLoop() {
        Scanner scan = new Scanner(System.in);
        System.out.println("Enter 'q' to exit..");
        System.out.println("For more commands enter 'help'...");
        while (server.running()) {

            System.out.print("$ ");
            String input = scan.nextLine();

            if (input.isBlank()) {
                continue;
            }

            // route input to appropriate action
            PConsoleRouter.route(input, server);

            // hot update processes with new settings (if any)
            server.updateSettings();

        }
    }
}
