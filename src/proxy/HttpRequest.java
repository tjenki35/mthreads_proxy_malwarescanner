package proxy;

import java.util.regex.Matcher;

/**
 *
 * @author Torie Jenkins u1038290
 */
public class HttpRequest extends Message {

    public int content_length; // parse the content length
    public String url;
    public String method;

    private final String[] accepted_methods = {"GET"}; //{"OPTIONS", "GET", "HEAD", "POST", "PUT", "DELETE", "TRACE", "CONNECT"};

    public HttpRequest() {
        super();
    }

    private boolean validateMethod(String type) {
        for (String m : accepted_methods) { //filter methods
            if (m.equals(type)) {
                return true;
            }
        }
        return false;
    }

    @Override
    public String pack() throws ParseException {
        String request = method + " " + path + " HTTP/1.0" + "\r\n";
        return request + super.pack();
    }

    @Override
    protected void parseArguments(String line) throws ParseException, NotImplementedException {
        Matcher req_match = REGEX_REQUEST.matcher(line);
        if (req_match.find()) {
            url = req_match.group(2);
            method = req_match.group(1);
            if (!validateMethod(method)) {
                throw new NotImplementedException("Invalid Method: " + method, 501, "Not Implemented", "");
            }
            protocol = req_match.group(3);
        } else {
            throw new ParseException("Invalid Args: " + line, 400, "Bad Request", Sources.BAD_REQUEST);
        }
        parseURI(url);
        validateMethod(method);
    }

}
