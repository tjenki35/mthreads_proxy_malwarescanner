package proxy;

import java.util.regex.Matcher;

/**
 * Extends the Message class for the specific format of a HTTP Response
 *
 * @author Torie Jenkins u1038290
 */
public class HttpResponse extends Message {

    public int status;
    public String reasonPhrase;

    public HttpResponse() {
        super();
    }

    public HttpResponse(String reason, int status) {
        super();
        reasonPhrase = reason;
        this.status = status;
        protocol = "HTTP/1.0";
    }

    /**
     * Returns a String representation of this Object
     *
     * @return
     * @throws ParseException
     */
    @Override
    public String pack() throws ParseException {
        String response = protocol + " " + status + " " + reasonPhrase + "\r\n";
        return response + super.pack();
    }

    /**
     * Parses the initial method header line
     *
     * @param line
     * @throws ParseException
     */
    @Override
    protected void parseArguments(String line) throws ParseException {
        Matcher match = REGEX_RESPONSE.matcher(line);
        if (match.find()) {
            protocol = match.group(1);
            status = Integer.parseInt(match.group(2));
            reasonPhrase = match.group(3);
        } else {
            throw new ParseException("Invalid Args: " + line, 400, "Bad Request", Sources.BAD_REQUEST);
        }
    }
}
